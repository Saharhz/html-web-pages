:root {
  /*global variables*/
  --primary_color: #8053ff;
  --main_body_color: #23155b;
  --gray_light_color: #817d8e;
  --white_color: #f4f4f4;
  --backgroundcolor: #d9d5d5;
}

body,
html {
  /*to omit the defalt margin and padding of the browser*/
  padding: 0;
  margin: 0;
}

body {
  background-color: #d9d5d5;
  font-family: "Martel Sans", sans-serif;
}

nav {
  display: flex; /* no need to use grid, when we have just a container*/
  justify-content: space-between;
  padding: 40px;
  align-items: center;
}
.logo {
  display: flex; /* to put logo and CLS in a line as a row*/
  align-items: center;
}
.leftbar {
  display: flex;
  gap: 20px;
  align-items: center;
}

nav a {
  text-decoration: none;
  color: black;
}

button {
  background-color: var(--primary_color);
  border-radius: 5px;
  border: none;
  padding: 5px 10px;
  color: #f4f4f4;
}

button:hover {
  background-color: #f4f4f4;
  color: var(--primary_color);
}

.menu-toggle {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
}

.menu-toggle img {
  width: 24px;
}

/* make nav Responsiv */

@media (max-width: 425px) {
  nav {
    padding: 20px;
  }

  .leftbar {
    gap: 10px;
  }

  .nav-mobil {
    display: none;
    flex-direction: column;
    position: absolute;
    top: 50px;
    width: 100%;
    text-align: center;
    padding: 10px 0;
  }
  .nav-mobil.active {
    display: flex;
  }
  .nav-mobil a {
    padding: 10px 0;
  }
  .menu-toggle {
    display: block;
  }
  nav button:last-child {
    display: none;
  }
}

main {
  display: grid;
  grid-template-rows: 120px 90px 90px;
  justify-items: center;
  padding: 20px;
  margin: 40px;
}
main p {
  font-size: 10px;
  place-content: center;
}

/* make main responsive */

@media (max-width: 425px) {
  main {
    padding: 20px;
    margin: 20px;
    grid-template-rows: auto;
  }
}

.grid_container {
  display: flex; /* it is not possible to aligns the grid in center with grid parameters, justify items just center the items of grid, not the whole container*/
  justify-content: center;
  align-items: center;
}

.statics {
  display: grid;
  gap: 20px;
  grid-template-columns: 200px 200px;
  grid-template-rows: 80px 80px 80px;
  text-align: center;
  grid-template-areas:  /* make it as a table with help of grid-area*/
    "titlearea titlearea"
    "problemarea codersarea"
    "languagearea submissionarea";
}
/* giving name to the each area of the grid to make a table of it in statics class*/
.title {
  grid-area: titlearea;
}
/* I should find a way to decrease the repeate of the parameters*/
.problems {
  grid-area: problemarea;
  background-color: var(--white_color);
  padding: 20px 10px;
  text-align: center;
  line-height: 0.5;
  font-size: 14px;
}

.coders {
  grid-area: codersarea;
  background-color: var(--white_color);
  padding: 20px 10px;
  text-align: center;
  line-height: 0.8;
  font-size: 14px;
}

.language {
  grid-area: languagearea;
  background-color: var(--white_color);
  padding: 20px 10px;
  text-align: center;
  line-height: 0.8;
  font-size: 14px;
}

.submission {
  grid-area: submissionarea;
  background-color: var(--white_color);
  padding: 20px 10px;
  text-align: center;
  line-height: 0.8;
  font-size: 14px;
}

/* make grid container responsive */

@media (max-width: 425px) {
  .statics {
    grid-template-rows: auto;
    grid-template-columns: 1fr;
  }
  .griditem {
    padding: 20px 10px;
    text-align: center;
    font-size: 14px;
  }
}

.programms h3 {
  color: var(--primary_color);
}
.programms h2 {
  font-weight: 1000;
  font-size: 30px;
}
.highlight {
  color: var(--primary_color);
}

.programms {
  width: fit-content;
  border: none;
  padding: 15px;
}

.programms p {
  font-size: 12px;
}

.programms h3,
.programms h2,
.programms p {
  margin: 5px 0; /* Adjust the value as needed for the distance between text */
}

.containerforgrid {
  display: grid; /* grid container for the whole section in html*/
  grid-template-columns: 1fr 1fr;
  grid-template-rows: repeat(
    3,
    80px
  ); /* adjust the rows with repeat function: 3 rows 100px */
  gap: 10px;
  padding: 10px;
}

.griditem {
  display: flex; /* for the items in div, it means tick and text*/
  align-items: center; /* Aligns items (tick and text) vertically */
  background-color: var(--backgroundcolor);
  line-height: 1.2; /* between text of griditems???? it didn't work fully*/
  font-size: 12px;
  padding: 10px;
  gap: 10px; /* Adds space between tick and text */
  border: 1px solid var(--gray_light_color);
  border-radius: 10px;
}

.griditem span {
  font-size: 20px;
  flex-shrink: 0; /* Prevents the tick from shrinking */
}

.text-container {
  display: flex; /* grid didn't work here, don't know why*/
  flex-direction: column; /* Stacks the text vertically */
}

.text-container p,
.text-container p {
  margin: 3px 0; /* Adjust the value as needed, lineheight in grid item was not enough, because it influence the paragraph itself */
}

.gridbutton {
  margin: 12px;
}

/* make grid responsive */

@media (max-width: 425px) {
  .containerforgrid {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }
  .text-container p {
    margin: 5px 0;
  }
}

#sidebar {
  display: flex;
  width: 200px;
  border-top-right-radius: 30px;
  border-bottom-right-radius: 30px;
}

.flexbox {
  display: flex;
  padding-top: 40px;
}

.sidebox h3,
.sidebox img {
  margin: 5px 50px;
}

.sidebox p {
  font-size: 10px;
  margin: 5px 50px;
  text-align: justify;
}

.borderbox {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  height: 400px;
  width: 300px;
  background-color: var(--white_color);
  margin: auto;
  padding: 20px;
  border-radius: 10px;
}

.Testimonial h2 {
  text-align: center;
}

.Testimonial p {
  font-size: 12px;
  margin: 1px 1px;
  padding-left: 10px;
}

#persona {
  width: 90px;
  height: 90px;
  border-radius: 50%;
  object-fit: cover;
}
/* make the whole flexbox responsive */
@media (max-width: 425px) {
  #sidebar {
    width: 80%;
    max-width: 200px;
    border-top-right-radius: 30px;
    border-bottom-right-radius: 30px;
  }
  .flexbox {
    padding-top: 20px;
    flex-direction: column;
  }
}

footer {
  background-color: var(--main_body_color);
  color: var(--white_color);
  border-top-left-radius: 25%;
  padding: 30px;
  display: flex;
  flex-direction: column;
  margin-top: 30px;
}

footer button {
  margin: 10px;
  width: fit-content;
}

#message {
  padding-bottom: 80px;
}

footer input {
  width: 250px;
}

input::placeholder {
  color: var(--backgroundcolor);
}

/* make footer responsive */

@media (max-width: 425px) {
  footer {
    padding: Û±0px;
    margin-top: 20px;
  }

  #message {
    padding-bottom: 40px;
  }

  footer input {
    width: 90%;
  }
}
